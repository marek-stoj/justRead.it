using NReadability;

namespace JustReadIt.Core.Services {

  // TODO IMM HI: remove
  public class FakeUrlFetcher : IUrlFetcher {

    public string Fetch(string url) {
      return "<html> <head>   <title></title> </head> <body>   <p>     Kilka miesięcy temu kupiliśmy nowy aparat cyfrowy, aby móc robić zdjęcia naszemu <a href=\"http://www.codinghorror.com/blog/archives/001242.html\">\"świeżospłodzonemu procesowi\"</a>. Moja żona, która była odpowiedzialna za ten zakup, sumiennie rozpakowała aparat, włożyła baterie i rozpoczęła pierwsze testy. Jak do większości elektronicznych gadżetów, również do tego aparatu dołączona była płytka CD z oprogramowaniem, więc moja żona bez większego namysłu wrzuciła ją do napędu.   </p>      <p>     Kątem oka zauważyłem, co się święci i -- teraz spróbuj sobie wyobrazić to w zwolnionym tempie dla większego efektu -- krzyknąłem \"NIEEEeeeee\", jednocześnie desperacko rzucając się przez pół pokoju, by zapobiec odpaleniu instalatora. Udało się, ale przy okazji niemal załatwiłem naszego kota.   </p>      <p>     Wydawać by się mogło, że nie ma nic <i>złego</i> w oprogramowaniu dołączanym do aparatu cyfrowego. Ale czy tak jest w rzeczywistości?   </p>      <ol>     <li>       <b>Prawdopodobnie jest ono niepotrzebne</b>. Każdy nowoczesny system operacyjny (nawet Windows XP!) jest w stanie wykryć i skopiować zdjęcia z nowego aparatu cyfrowego. Nie trzeba do tego żadnego dodatkowego softu. Jednak mając na celu zwiększenie \"wartości\" oraz chęć wyróżnienia się na tle konkurencji, jakiś kierownik w firmie produkującej te aparty zdecdował, że dołączanie oprogramowania z wymyślnymi i unikatowymi funkcjonalnościami jest niezłym pomysłem.     </li>     <li>       <b>Firmy zajmujące się sprzętem rzadko kiedy tworzą dobre oprogramowanie</b>. Producenci aparatów cyfrowych tworzą świetne aparaty cyfrowe, natomiast ich oprogramowanie jest co najwyżej produktem ubocznym, który powstał tylko ze względu na widzimisię ludzi od marketingu.     </li>     <li>       <b>Oprogramowanie nieznanego pochodzenia zostało prawdopodobnie napisane przez kiepskich programistów</b>. Prawdopodobieństwo, że jakieś nowe oprogramowanie, które zamierzasz właśnie zainstalować, będzie użyteczne, a korzystanie z niego będzie przyjemne i bezstresowe, jest ... hmm, niskie.     </li>   </ol>      <p>     Jednym z (wielu) skutków ubocznych obrania kariery programisty jest to, że z czasem zaczynasz nienawidzić oprogramowanie. Naprawdę nienawdzić. <i>Namiętnie</i> nienawidzić. Nawet jeśli weźmiesz najbardziej poirytowanego użytkownika, jakiego kiedykolwiek w życiu spotkałeś i pomnożysz jego złość przez tysiąc, to nie uda Ci się nawet w przybliżeniu poznać stosunku, jaki my programiści mamy do oprogramowania. <b>Nikt nie nienawidzi oprogramowania bardziej niż programiści</b>. Nawet teraz, pisząc o tym, rozpiera mnie szczera złość.   </p>      <p>     Czyż takie podejście ludzi, których praca polega na pisaniu oprogramowania, nie jest dziwne? Jak to jest, że tak bardzo nienawidzimy coś, co tworzymy dzień w dzień i za co dostajemy pieniądze?   </p>      <p>     Na te pytania odpowiedział David Parnas w <a href=\"http://www.sigsoft.org/SEN/parnas.html\">jednym z wywiadów</a>:   </p>      <blockquote>     <p>       Q: Jakie ryzyko w inżynierii oprogramowania jest najczęściej przeoczanym?     </p>     <p>       A: Niekompetentni programiści. Szacuje się, że w samych Stanach Zjednoczonych zapotrzebowanie na programistów przekracza 200 000. Takie szacunki są strasznie mylące. My nie mamy problemu ilościowego; mamy problem jakościowy. Jeden kiepski programista bez problemu może stworzyć dwa nowe miejsca pracy w ciągu roku. Zatrudnianie kolejnych takich programistów prowadzi tylko do tego, że wydaje nam się, iż potrzebujemy ich jeszcze więcej. Gdybyśmy mieli więcej dobrych programistów oraz łatwy sposób na ich rozpoznawanie, potrzebowalibyśmy ich mniej, a nie coraz więcej.     </p>   </blockquote>      <p>     Skąd wiem, bez cienia wątpliwości, że świat jest pełen niekompetentnych programistów? <i>Ponieważ sam jestem jednym z nich!</i>   </p>      <p>     Jeśli pracujesz w tej branży, to wiesz, w jaki sposób oprogramowanie powstaje. Jest to <a href=\"http://www.codinghorror.com/blog/archives/000588.html\">proces raczej paskudny</a>. Znaczna liczba programów tworzona jest przez kiepskich programistów, jakimi sami jesteśmy (albo nawet gorszych), więc z definicji <b>większość oprogramowania ssie</b>. Co to znaczy? Odwołajmy się do artykułu Scotta Berkuna <a href=\"http://www.scottberkun.com/essays/46-why-software-sucks/\">Why Software Sucks</a>:   </p>      <blockquote>     <p>       Gdy ludzie mówią \"to ssie\", mają na myśli co najmniej jedno z poniższych:     </p>     <ul>       <li>         to nie robi tego, czego potrzebuję,       </li>       <li>         nie wiem, jak użyć tego, by uzyskać to, czego potrzebuję,       </li>       <li>         jest to niepotrzebnie frustrujące i zbyt skomplikowane,       </li>       <li>         psuje się cały czas,       </li>       <li>         to jest tak brzydkie, że mam ochotę zwymiotować, żeby móc popatrzeć na coś ładniejszego,       </li>       <li>         kłóci się to z moim rozumieniem wszechświata,       </li>       <li>         myślę o narzędziu zamiast o pracy, którą mam do wykonania.       </li>     </ul>   </blockquote>      <p>     Jak sądzisz? Ile z tych wymienionych wyżej stwierdzeń mogłoby pasować do oprogramowania dołączonego do aparatu cyfrowego? Ja zgaduję, że wszystkie. Z tego powodu uważam, że brak jakiegokolwiek programu często byłby najrozsądniejszym wyborem, a jeśli już, to powinien on pochodzić ze sprawdzonych, szanowanych i rzetelnych źródeł.   </p>      <p>     Osobiście nie przepadam za instalowaniem nowego oprogramowania. Wręcz przeciwnie, obawiam się tego.   </p>      <p>     Podzielę się z Tobą koszmarem, który systematycznie mnie nawiedza. W tym śnie siedzę sobie przed komputerem, na którym właśnie uruchamia się system operacyjny, który sam napisałem. Następnie uruchamiam przeglądarkę internetową, którą własnoręcznie stworzyłem od podstaw, i przechodzę do witryny, której również jestem autorem. Gdy klikam w pierwszy odnośnik moim oczom ukazuje się niebieski ekran. Po chwili na tym niebieskim ekranie wyskakuje kolejny niebieski ekran. Wszystko to powtarza się, można by rzec rekurencyjnie, doprowadzając do olbrzymiej eksplozji, która niszczy całą dzielnicę miasta.   </p>      <p>     Ta wersja snu jest tą łagodniejszą - w innej wersji jest tylko ... krzyk. I ciemność.   </p>      <p>     W skrócie - nienawidzę oprogramowania -- a zwłaszcza tego stworzonego przeze mnie -- ponieważ wiem, jak trudno jest zrobić to dobrze. Może to dziwnie zabrzmieć, ale właśnie takie podejście jest chyba naturalne i zdrowe dla programisty. To swego rodzaju więź, rytuał przejścia, coś, co jest cechą wspólną kompetentnych programistów.   </p>      <p>     Właściwie to uważam, że można odróżnić kompetentnego programistę od kiepskiego za pomocą jednego pytania podczas rozmowy kwalifikacyjnej:   </p>      <blockquote>     <p>       Jaki najgorszy kod widziałeś ostatnio?     </p>   </blockquote>      <p>     Jeśli ich natychmiastową odpowiedzią nie są te dwa słowa:   </p>      <blockquote>     <p>       Mój własny.     </p>   </blockquote>      <p>     To powinieneś od razu przerwać rozmowę. Sorry kolego. Nie nienawidzisz jeszcze oprogramowania wystarczająco mocno. Może za kilka lat. Jeśli zdołasz wytrwać.   </p> </body> </html>";
    }

  }
}
